name: Deploy Quantum Risk Coach

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint || true

    - name: Run type checking
      run: npx tsc --noEmit

    - name: Build application
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        
        # AI Providers
        VITE_OPENAI_API_KEY: ${{ secrets.VITE_OPENAI_API_KEY }}
        VITE_GROQ_API_KEY: ${{ secrets.VITE_GROQ_API_KEY }}
        VITE_GEMINI_API_KEY: ${{ secrets.VITE_GEMINI_API_KEY }}
        
        # Market Data APIs
        VITE_YFINANCE_API_KEY: ${{ secrets.VITE_YFINANCE_API_KEY }}
        VITE_COINGECKO_API_KEY: ${{ secrets.VITE_COINGECKO_API_KEY }}
        VITE_ALPHA_VANTAGE_API_KEY: ${{ secrets.VITE_ALPHA_VANTAGE_API_KEY }}
        VITE_POLYGON_API_KEY: ${{ secrets.VITE_POLYGON_API_KEY }}
        VITE_EXCHANGERATE_API_KEY: ${{ secrets.VITE_EXCHANGERATE_API_KEY }}
        VITE_FIXER_API_KEY: ${{ secrets.VITE_FIXER_API_KEY }}
        VITE_FMP_API_KEY: ${{ secrets.VITE_FMP_API_KEY }}
        VITE_ETHERSCAN_API_KEY: ${{ secrets.VITE_ETHERSCAN_API_KEY }}
        VITE_FINNHUB_API_KEY: ${{ secrets.VITE_FINNHUB_API_KEY }}
        VITE_NEWS_API_KEY: ${{ secrets.VITE_NEWS_API_KEY }}
        
        # Messaging/Bots
        VITE_TELEGRAM_BOT_TOKEN: ${{ secrets.VITE_TELEGRAM_BOT_TOKEN }}
        VITE_TELEGRAM_CHAT_ID: ${{ secrets.VITE_TELEGRAM_CHAT_ID }}
        
        # Trading Data APIs
        VITE_TRADING_ECONOMICS_API_KEY: ${{ secrets.VITE_TRADING_ECONOMICS_API_KEY }}
        VITE_FRED_API_KEY: ${{ secrets.VITE_FRED_API_KEY }}
        
        # Broker APIs
        VITE_BINANCE_API_KEY: ${{ secrets.VITE_BINANCE_API_KEY }}
        VITE_BINANCE_SECRET_KEY: ${{ secrets.VITE_BINANCE_SECRET_KEY }}
        VITE_BYBIT_API_KEY: ${{ secrets.VITE_BYBIT_API_KEY }}
        VITE_BYBIT_SECRET_KEY: ${{ secrets.VITE_BYBIT_SECRET_KEY }}
        VITE_KUCOIN_API_KEY: ${{ secrets.VITE_KUCOIN_API_KEY }}
        VITE_KUCOIN_SECRET_KEY: ${{ secrets.VITE_KUCOIN_SECRET_KEY }}
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./

  supabase-migrate:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Supabase CLI
      uses: supabase/setup-cli@v1
      with:
        version: latest

    - name: Link Supabase project
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      run: |
        supabase link --project-ref heptsojfesbumrhwniqj

    - name: Push database changes
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      run: |
        supabase db push 